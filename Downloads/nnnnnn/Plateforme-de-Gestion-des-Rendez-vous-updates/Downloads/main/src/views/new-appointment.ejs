<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
</head>
<body>
    <div class="container-fluid">
        <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
            <div class="container">
                <a class="navbar-brand" href="/dashboard">Tableau de bord</a>
                <div class="d-flex">
                    <button class="btn btn-outline-primary me-2" onclick="window.location.href='/dashboard'">
                        <i class="bi bi-arrow-left"></i> Retour
                    </button>
                    <button class="btn btn-outline-danger" onclick="handleLogout()">
                        <i class="bi bi-box-arrow-right"></i> Déconnexion
                    </button>
                </div>
            </div>
        </nav>

        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <h2 class="card-title mb-4">Nouveau Rendez-vous</h2>
                            
                            <form id="appointmentForm">
                                <div class="mb-3">
                                    <label for="professional" class="form-label">Professionnel :</label>
                                    <select id="professional" name="professional" class="form-select" required>
                                        <option value="">Choisir un professionnel...</option>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="date" class="form-label">Date :</label>
                                    <input type="date" id="date" name="date" class="form-control" required 
                                           min="<%= new Date().toISOString().split('T')[0] %>">
                                </div>

                                <div class="mb-3">
                                    <label for="time" class="form-label">Heure :</label>
                                    <select id="time" name="time" class="form-select" required>
                                        <option value="">Choisir une heure...</option>
                                        <option value="09:00">09:00</option>
                                        <option value="10:00">10:00</option>
                                        <option value="11:00">11:00</option>
                                        <option value="14:00">14:00</option>
                                        <option value="15:00">15:00</option>
                                        <option value="16:00">16:00</option>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="reason" class="form-label">Motif du rendez-vous :</label>
                                    <textarea id="reason" name="reason" class="form-control" rows="3" required
                                              placeholder="Décrivez brièvement la raison de votre rendez-vous..."></textarea>
                                </div>

                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-calendar-plus"></i> Confirmer le rendez-vous
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            // Charger la liste des professionnels
            try {
                const response = await fetch('/api/appointments/professionals');
                const professionals = await response.json();
                
                const select = document.getElementById('professional');
                professionals.forEach(pro => {
                    const option = document.createElement('option');
                    option.value = pro._id;
                    option.textContent = `${pro.firstName} ${pro.lastName}`;
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur lors du chargement des professionnels');
            }

            // Gérer la soumission du formulaire
            document.getElementById('appointmentForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    professionalId: document.getElementById('professional').value,
                    date: document.getElementById('date').value,
                    time: document.getElementById('time').value,
                    reason: document.getElementById('reason').value
                };

                try {
                    const response = await fetch('/api/appointments', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });

                    const result = await response.json();

                    if (result.success) {
                        alert('Rendez-vous créé avec succès !');
                        window.location.href = '/dashboard';
                    } else {
                        alert(result.message || 'Erreur lors de la création du rendez-vous');
                    }
                } catch (error) {
                    console.error('Erreur:', error);
                    alert('Une erreur est survenue');
                }
            });
        });

        async function handleLogout() {
            try {
                const response = await fetch('/logout', {
                    method: 'POST'
                });
                if (response.ok) {
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('Erreur de déconnexion:', error);
            }
        }
    </script>
</body>
</html>
