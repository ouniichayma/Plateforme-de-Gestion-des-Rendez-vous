<!DOCTYPE html>
<html>
<head>
    <title>Gestion des Rendez-vous</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title mb-4">Gestion des Rendez-vous</h2>

                        <% if (user.role === 'client') { %>
                            <div class="booking-section mb-5">
                                <h3>Prendre un rendez-vous</h3>
                                <form id="bookingForm" class="appointment-form">
                                    <div class="mb-3">
                                        <label for="professional" class="form-label">Professionnel :</label>
                                        <select id="professional" name="professional" class="form-select" required>
                                            <% professionals.forEach(function(pro) { %>
                                                <option value="<%= pro._id %>"><%= pro.firstName %> <%= pro.lastName %></option>
                                            <% }); %>
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label for="date" class="form-label">Date :</label>
                                        <input type="date" id="date" name="date" class="form-control" required>
                                    </div>

                                    <div class="mb-3">
                                        <label for="time" class="form-label">Heure :</label>
                                        <select id="time" name="time" class="form-select" required>
                                            <option value="09:00">09:00</option>
                                            <option value="10:00">10:00</option>
                                            <option value="11:00">11:00</option>
                                            <option value="14:00">14:00</option>
                                            <option value="15:00">15:00</option>
                                            <option value="16:00">16:00</option>
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label for="reason" class="form-label">Motif du rendez-vous :</label>
                                        <textarea id="reason" name="reason" class="form-control" rows="3" required></textarea>
                                    </div>

                                    <button type="submit" class="btn btn-primary">Confirmer le rendez-vous</button>
                                </form>
                            </div>
                        <% } %>

                        <div class="appointments-list">
                            <h3 class="mb-4">Mes rendez-vous</h3>
                            <div id="appointmentsList">
                                <!-- Les rendez-vous seront chargés ici dynamiquement -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const bookingForm = document.getElementById('bookingForm');
        if (bookingForm) {
            bookingForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = {
                    professionalId: document.getElementById('professional').value,
                    date: document.getElementById('date').value,
                    time: document.getElementById('time').value,
                    reason: document.getElementById('reason').value
                };

                try {
                    const response = await fetch('/api/appointments', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });

                    const result = await response.json();

                    if (result.success) {
                        alert('Rendez-vous créé avec succès !');
                        window.location.href = '/dashboard';
                    } else {
                        alert(result.message || 'Erreur lors de la création du rendez-vous');
                    }
                } catch (error) {
                    console.error('Erreur:', error);
                    alert('Une erreur est survenue');
                }
            });
        }

        // Fonction pour charger les rendez-vous
        async function loadAppointments() {
            try {
                const response = await fetch('/api/appointments/my-appointments');
                const appointments = await response.json();
                const appointmentsList = document.getElementById('appointmentsList');
                
                if (appointments.length === 0) {
                    appointmentsList.innerHTML = '<div class="alert alert-info">Aucun rendez-vous</div>';
                    return;
                }

                appointmentsList.innerHTML = appointments.map(appointment => `
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Rendez-vous le ${new Date(appointment.date).toLocaleDateString()} à ${appointment.time}</h5>
                            <p class="card-text"><strong>Professionnel:</strong> ${appointment.professional.firstName} ${appointment.professional.lastName}</p>
                            <p class="card-text"><strong>Motif:</strong> ${appointment.reason}</p>
                            <p class="card-text">
                                <strong>Statut:</strong> 
                                <span class="badge bg-${getStatusColor(appointment.status)}">${appointment.status}</span>
                            </p>
                            ${appointment.status === 'pending' || appointment.status === 'accepted' ? `
                                <button class="btn btn-danger" onclick="cancelAppointment('${appointment._id}')">
                                    Annuler le rendez-vous
                                </button>
                            ` : ''}
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Erreur lors du chargement des rendez-vous:', error);
                document.getElementById('appointmentsList').innerHTML = 
                    '<div class="alert alert-danger">Erreur lors du chargement des rendez-vous</div>';
            }
        }

        function getStatusColor(status) {
            switch(status) {
                case 'pending': return 'warning';
                case 'accepted': return 'success';
                case 'rejected': return 'danger';
                case 'cancelled': return 'secondary';
                default: return 'primary';
            }
        }

        // Fonction pour annuler un rendez-vous
        window.cancelAppointment = async function(appointmentId) {
            if (!confirm('Êtes-vous sûr de vouloir annuler ce rendez-vous ?')) {
                return;
            }

            try {
                const response = await fetch(`/api/appointments/${appointmentId}/cancel`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();
                if (result.success) {
                    alert('Rendez-vous annulé avec succès');
                    loadAppointments();
                } else {
                    alert(result.message || 'Erreur lors de l\'annulation');
                }
            } catch (error) {
                console.error('Erreur:', error);
                alert('Une erreur est survenue');
            }
        }

        // Charger les rendez-vous au chargement de la page
        loadAppointments();
    });
    </script>
</body>
</html>
