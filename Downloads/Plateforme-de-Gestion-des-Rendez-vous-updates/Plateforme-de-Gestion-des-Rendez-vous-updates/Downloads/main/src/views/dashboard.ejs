<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <!-- FullCalendar CSS -->
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
    
    <style>
        .fc-event {
            cursor: pointer;
            margin: 2px 0;
            border-radius: 4px;
        }
        .fc-event-title {
            font-weight: bold;
            padding: 2px;
        }
        .status-pending { background-color: #ffc107 !important; color: #000 !important; }
        .status-accepted { background-color: #198754 !important; color: #fff !important; }
        .status-rejected { background-color: #dc3545 !important; color: #fff !important; }
        .status-cancelled { background-color: #6c757d !important; color: #fff !important; }
    </style>
</head>
<body>
    <% if (user.role === 'client') { %>
    <div class="container-fluid">
        <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
            <div class="container">
                <a class="navbar-brand" href="/dashboard">
                    <i class="bi bi-calendar2-check"></i>
                    Espace Client
                </a>
                <div class="d-flex">
                    <button class="btn btn-outline-primary me-2" onclick="window.location.href='/appointments/new'">
                        <i class="bi bi-plus-circle"></i> Nouveau rendez-vous
                    </button>
                    <button class="btn btn-outline-danger" onclick="handleLogout()">
                        <i class="bi bi-box-arrow-right"></i> Déconnexion
                    </button>
                </div>
            </div>
        </nav>

        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h4>Bienvenue, <%= user.firstName %> <%= user.lastName %></h4>
                            <p class="text-muted mb-0">Rôle : Client</p>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div id="calendar"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <% } else { %>
    <div class="container-fluid">
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-4">
            <div class="container">
                <a class="navbar-brand" href="/dashboard">
                    <i class="bi bi-calendar2-check"></i>
                    Espace Professionnel
                </a>
                <div class="d-flex align-items-center">
                    <button class="btn btn-outline-light me-2" onclick="window.location.href='/appointments/list'">
                        <i class="bi bi-list-ul"></i> Liste des rendez-vous
                    </button>
                    <span class="navbar-text me-3 text-white">
                        <i class="bi bi-person"></i> <%= user.firstName %> <%= user.lastName %>
                    </span>
                    <button class="btn btn-outline-light" onclick="handleLogout()">
                        <i class="bi bi-box-arrow-right"></i> Déconnexion
                    </button>
                </div>
            </div>
        </nav>

        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h4>Bienvenue, <%= user.firstName %> <%= user.lastName %></h4>
                            <p class="text-muted mb-0">Rôle : Professionnel</p>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div id="calendar"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <% } %>

    <!-- Modal pour les détails du rendez-vous -->
    <div class="modal fade" id="appointmentModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Détails du rendez-vous</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <strong>Date :</strong>
                        <span id="apt-date"></span>
                    </div>
                    <div class="mb-3">
                        <strong>Statut :</strong>
                        <span id="apt-status" class="badge"></span>
                    </div>
                    <div class="mb-3">
                        <strong>Description :</strong>
                        <p id="apt-description" class="mb-0"></p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                    <button type="button" class="btn btn-danger" id="cancelBtn" onclick="cancelAppointment()">
                        Annuler le rendez-vous
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let currentAppointmentId = null;
        const appointmentModal = new bootstrap.Modal(document.getElementById('appointmentModal'));

        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('calendar');
            
            if (!calendarEl) {
                console.error('Élément calendar non trouvé !');
                return;
            }

            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                locale: 'fr',
                buttonText: {
                    today: "Aujourd'hui",
                    month: 'Mois',
                    week: 'Semaine',
                    day: 'Jour'
                },
                events: function(info, successCallback, failureCallback) {
                    fetch('/api/appointments/my-appointments')
                        .then(response => response.json())
                        .then(data => {
                            const events = data.map(apt => {
                                const dateTime = apt.date + 'T' + apt.time;
                                return {
                                    id: apt._id,
                                    title: `Rendez-vous (${apt.status})`,
                                    start: dateTime,
                                    className: `status-${apt.status}`,
                                    extendedProps: {
                                        status: apt.status,
                                        description: apt.reason || 'Pas de description'
                                    }
                                };
                            });
                            successCallback(events);
                        })
                        .catch(error => {
                            console.error('Erreur lors du chargement des rendez-vous:', error);
                            failureCallback(error);
                        });
                },
                eventClick: function(info) {
                    showAppointmentDetails(info.event);
                }
            });

            calendar.render();
        });

        function showAppointmentDetails(event) {
            currentAppointmentId = event.id;
            
            document.getElementById('apt-date').textContent = event.start.toLocaleDateString('fr-FR', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            
            const statusElement = document.getElementById('apt-status');
            statusElement.textContent = event.extendedProps.status;
            statusElement.className = `badge status-${event.extendedProps.status}`;
            
            document.getElementById('apt-description').textContent = event.extendedProps.description;
            
            const cancelBtn = document.getElementById('cancelBtn');
            cancelBtn.style.display = ['pending', 'accepted'].includes(event.extendedProps.status) ? 'block' : 'none';
            
            appointmentModal.show();
        }

        function handleLogout() {
            fetch('/logout', { method: 'POST' })
                .then(() => window.location.href = '/login')
                .catch(error => console.error('Erreur de déconnexion:', error));
        }

        async function cancelAppointment() {
            if (!currentAppointmentId) return;
            
            try {
                const response = await fetch(`/api/appointments/${currentAppointmentId}/cancel`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    appointmentModal.hide();
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.message || 'Erreur lors de l\'annulation du rendez-vous');
                }
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur lors de l\'annulation du rendez-vous');
            }
        }
    </script>
</body>
</html>
