<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <!-- FullCalendar CSS -->
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
    
    <style>
        .fc-event {
            cursor: pointer;
            margin: 2px 0;
            border-radius: 4px;
        }
        .fc-event-title {
            font-weight: bold;
            padding: 2px;
        }
        .status-pending { background-color: #ffc107 !important; color: #000 !important; }
        .status-accepted { background-color: #198754 !important; color: #fff !important; }
        .status-rejected { background-color: #dc3545 !important; color: #fff !important; }
        .status-cancelled { background-color: #6c757d !important; color: #fff !important; }
    </style>
</head>
<body>
    <%- include('partials/navbar-professional') %>

    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-body">
                        <h4>Bienvenue, <%= user.firstName %> <%= user.lastName %></h4>
                        <p class="text-muted mb-0">Professionnel</p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <div id="calendar"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('calendar');
            
            if (!calendarEl) {
                console.error('Élément calendar non trouvé !');
                return;
            }

            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                locale: 'fr',
                buttonText: {
                    today: "Aujourd'hui",
                    month: 'Mois',
                    week: 'Semaine',
                    day: 'Jour'
                },
                events: function(info, successCallback, failureCallback) {
                    fetch('/api/appointments/my-appointments')
                        .then(response => response.json())
                        .then(data => {
                            const events = data.map(apt => {
                                const dateTime = apt.date + 'T' + apt.time;
                                return {
                                    id: apt._id,
                                    title: `${apt.client.firstName} ${apt.client.lastName} (${apt.status})`,
                                    start: dateTime,
                                    className: `status-${apt.status}`,
                                    extendedProps: {
                                        status: apt.status,
                                        description: apt.reason || 'Pas de description',
                                        client: apt.client
                                    }
                                };
                            });
                            successCallback(events);
                        })
                        .catch(error => {
                            console.error('Erreur lors du chargement des rendez-vous:', error);
                            failureCallback(error);
                        });
                },
                eventClick: function(info) {
                    const event = info.event;
                    const client = event.extendedProps.client;
                    const status = event.extendedProps.status;
                    
                    if (status === 'pending') {
                        if (confirm(`Voulez-vous gérer le rendez-vous de ${client.firstName} ${client.lastName} ?`)) {
                            window.location.href = '/appointments/list';
                        }
                    }
                }
            });

            calendar.render();
        });

        function handleLogout() {
            fetch('/logout', { method: 'POST' })
                .then(() => window.location.href = '/login')
                .catch(error => console.error('Erreur de déconnexion:', error));
        }
    </script>
</body>
</html>
