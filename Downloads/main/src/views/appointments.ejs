<div class="appointments">
    <h2>Gestion des Rendez-vous</h2>

    <% if (user.role === 'client') { %>
        <div class="booking-section">
            <h3>Prendre un rendez-vous</h3>
            <form id="bookingForm" class="appointment-form">
                <div class="form-group">
                    <label for="professional">Professionnel :</label>
                    <select id="professional" name="professional" required>
                        <% professionals.forEach(function(pro) { %>
                            <option value="<%= pro.id %>"><%= pro.firstName %> <%= pro.lastName %></option>
                        <% }); %>
                    </select>
                </div>

                <div class="form-group">
                    <label for="date">Date :</label>
                    <input type="date" id="date" name="date" required>
                </div>

                <div class="form-group">
                    <label for="time">Heure :</label>
                    <select id="time" name="time" required>
                        <option value="09:00">09:00</option>
                        <option value="10:00">10:00</option>
                        <option value="11:00">11:00</option>
                        <option value="14:00">14:00</option>
                        <option value="15:00">15:00</option>
                        <option value="16:00">16:00</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="reason">Motif du rendez-vous :</label>
                    <textarea id="reason" name="reason" required></textarea>
                </div>

                <button type="submit">Confirmer le rendez-vous</button>
            </form>
        </div>
    <% } %>

    <div class="appointments-list">
        <h3>Mes rendez-vous</h3>
        <div id="appointmentsList">
            <!-- Les rendez-vous seront chargés ici dynamiquement -->
        </div>
    </div>
</div>

<style>
    .appointments {
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .appointment-form {
        max-width: 600px;
        margin: 2rem 0;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
    }

    .form-group input,
    .form-group select,
    .form-group textarea {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .form-group textarea {
        height: 100px;
        resize: vertical;
    }

    .appointments-list {
        margin-top: 2rem;
    }

    .appointment-card {
        border: 1px solid #ddd;
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 4px;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const bookingForm = document.getElementById('bookingForm');
    if (bookingForm) {
        bookingForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = {
                professionalId: document.getElementById('professional').value,
                date: document.getElementById('date').value,
                time: document.getElementById('time').value,
                reason: document.getElementById('reason').value
            };

            try {
                const response = await fetch('/api/appointments', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();

                if (response.ok) {
                    alert('Rendez-vous créé avec succès !');
                    loadAppointments(); // Recharger la liste des rendez-vous
                } else {
                    alert(result.message || 'Erreur lors de la création du rendez-vous');
                }
            } catch (error) {
                console.error('Erreur:', error);
                alert('Une erreur est survenue');
            }
        });
    }

    // Fonction pour charger les rendez-vous
    async function loadAppointments() {
        try {
            const response = await fetch('/api/appointments/my-appointments', {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                }
            });

            const appointments = await response.json();
            const appointmentsList = document.getElementById('appointmentsList');
            
            if (appointments.length === 0) {
                appointmentsList.innerHTML = '<p>Aucun rendez-vous</p>';
                return;
            }

            appointmentsList.innerHTML = appointments.map(appointment => `
                <div class="appointment-card">
                    <h4>Rendez-vous le ${new Date(appointment.date).toLocaleDateString()} à ${appointment.time}</h4>
                    <p><strong>Professionnel:</strong> ${appointment.professional.firstName} ${appointment.professional.lastName}</p>
                    <p><strong>Motif:</strong> ${appointment.reason}</p>
                    <p><strong>Statut:</strong> ${appointment.status}</p>
                    ${appointment.status === 'pending' ? `
                        <button onclick="cancelAppointment('${appointment._id}')">Annuler</button>
                    ` : ''}
                </div>
            `).join('');
        } catch (error) {
            console.error('Erreur lors du chargement des rendez-vous:', error);
        }
    }

    // Fonction pour annuler un rendez-vous
    window.cancelAppointment = async function(appointmentId) {
        if (!confirm('Êtes-vous sûr de vouloir annuler ce rendez-vous ?')) {
            return;
        }

        try {
            const response = await fetch(`/api/appointments/${appointmentId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                }
            });

            if (response.ok) {
                alert('Rendez-vous annulé avec succès');
                loadAppointments(); // Recharger la liste
            } else {
                const result = await response.json();
                alert(result.message || 'Erreur lors de l\'annulation');
            }
        } catch (error) {
            console.error('Erreur:', error);
            alert('Une erreur est survenue');
        }
    }

    // Charger les rendez-vous au chargement de la page
    loadAppointments();
});
</script>
